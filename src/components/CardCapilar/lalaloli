import React, { useState, useEffect } from 'react'
import { addToCart } from '../Actions/ShoppingAcctions';
import { useDispatch, useSelector } from 'react-redux';
import Button from 'react-bootstrap/Button';
import Card from 'react-bootstrap/Card';
import {Link} from "react-router-dom";
import CardHeader from 'react-bootstrap/esm/CardHeader';
import { data } from '../assets/db/data';

 
function CardCapilar() {
   const [products, setProducts, categoria] = useState([])
   const [productosFiltrados, setProductosFiltrados] = useState(data); 
   const [filtroPrecio, setFiltroPrecio] = useState([0, Infinity]);
   const [filtroMarca, setFiltroMarca] = useState('');
   
  useEffect(() => {
    const productosFiltradosTemp = filtrarProductos(filtroPrecio, filtroMarca);
     setProducts(data); 
    setProductosFiltrados(productosFiltrados);
  }, [filtroPrecio, filtroMarca]); 
 
  // function addToCart(id) {
  //   dispatch({ type: TYPES.ADD_TO_CART, payload: id })
  //   console.log(state)
  // }
 


  const shampoo = data.filter(x => x.categoria ==='shampoo')
  console.log(shampoo);
  const dispatch = useDispatch();
  const state = useSelector((state) => state);
  const { cart } = state.shopping;
  
  function filtrarProductos(rangoPrecio, marca) {
    const [precioMinimo, precioMaximo] = rangoPrecio;
    const productosFiltradosTemp = data.filter((producto) => {
      const estaEnRangoPrecio =
      Number(producto.price) >= precioMinimo && Number(producto.price) <= precioMaximo;
      const esDeLaMarca = marca === '' || producto.marca === marca;
      return estaEnRangoPrecio && esDeLaMarca;
    });
    return productosFiltradosTemp;
  }
  function handleFiltrarClick(e) {
    e.preventDefault();
    const productosFiltradosTemp = filtrarProductos(filtroPrecio, filtroMarca);
    setProductosFiltrados(productosFiltradosTemp);
  }

  function handleLimpiarClick() {
    setProductosFiltrados(data);
    setFiltroPrecio([0, Infinity]);
    setFiltroMarca('');
  }
return (
          <>
            <h3>Shampoos, Acondicionadores y demás</h3>
            <br></br>
            <div>Filtros de búsqueda</div>
            <br />
      <div>Filtros de búsqueda</div>
      <form onSubmit={handleFiltrarClick}>
        <div>
          <label htmlFor="precio-minimo">Precio mínimo:</label>
          <input
            type="number"
            id="precio-minimo"
            value={filtroPrecio[0]}
            onChange={(e) =>
              setFiltroPrecio([Number(e.target.value), filtroPrecio[1]])
            }
          />
        </div>
        <div>
          <label htmlFor="precio-maximo">Precio máximo:</label>
          <input
            type="number"
            id="precio-maximo"
            value={filtroPrecio[1]}
            onChange={(e) =>
              setFiltroPrecio([filtroPrecio[0], Number(e.target.value)])
            }
          />
        </div>
        <div>
          <label htmlFor="marca">Marca:</label>
          <input
            type="text"
            id="marca"
            value={filtroMarca}
            onChange={(e) => setFiltroMarca(e.target.value)}
          />
        </div>
        <button onClick={handleFiltrarClick}  type="submit" >Filtrar</button>
        <button onClick={handleLimpiarClick}>Limpiar filtros</button>
      </form>
            <div className='grid'>
           
              {products.filter(x => x.categoria ==='shampoo').map((p) => {
                return (<Card 
                  style={{ width: '18rem' }}>
                    <article key={p.id} >
                    <Link to={`/item/${p.id}`}>
                    <Card.Img className='imgn' variant="top" src={p.image} />
                    </Link>
                    <Card.Body>
                      <Card.Title className='text-truncate'>{p.name}</Card.Title>
                      <CardHeader>{p.marca}</CardHeader>
                      <Card.Text>
                        {p.price}
                      </Card.Text>
                      <Button onClick={() =>  dispatch(addToCart(p.id))} variant="primary"><p>Comprar</p></Button>
                    </Card.Body>
                    </article>
                  </Card>
                  ) 
              })
              }
            </div>
         
          </>
        )}

export default CardCapilar